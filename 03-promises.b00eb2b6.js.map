{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,qBAC/BC,EAAOF,SAASC,cAAc,oBAC9BE,EAASH,SAASC,cAAc,sBAEhCG,EAAOJ,SAASC,cAAc,SAChCI,EAAU,KAEdD,EAAKE,iBAAiB,UAAU,SAAAC,GAE9B,IAAIC,EAAWC,OAAOV,EAAMW,OACxBC,EAAaF,OAAON,EAAOO,OAC3BE,EAAUH,OAAOP,EAAKQ,OAI1B,SAASG,EAAcC,EAAUC,GAW/B,OAVkB,IAAIC,SAAQ,SAACC,EAASC,GACtCb,EAAUc,YAAW,WACGC,KAAKC,SAAW,GAErBJ,EAAQ,CAAEH,WAAUC,aAElCG,EAAO,CAAEJ,WAAUC,Y,GAErBA,E,IAONR,EAACe,iBACFC,aAAalB,GAEb,IAAK,IAAImB,EAAI,EAAGA,EAAIb,EAAYa,IAAK,CAGjCX,EAFaW,EAEWhB,GACrBiB,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAQW,EAARX,SAEjBY,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfhB,EAAS,QAAegB,OAATf,EAAS,M,IAGpDgB,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAQW,EAARX,SAClBY,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfhB,EAAS,QAAegB,OAATf,EAAS,M,IAGpDP,GAAYI,C,CAGhBR,EAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\n\nconst form = document.querySelector('.form');\nlet timerId = null;\n\nform.addEventListener('submit', e => {\n  // deklaracja zmiennych\n  let numDelay = Number(delay.value);\n  let numPromise = Number(amount.value);\n  let numStep = Number(step.value);\n  // deklaracja zmiennych\n\n  // utworzenie funkcji\n  function createPromise(position, numDelay) {\n    const promiseMy = new Promise((resolve, reject) => {\n      timerId = setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n                         resolve({ position, numDelay });\n        } else {\n           reject({ position, numDelay });\n        }\n      }, numDelay);\n    });\n    return promiseMy;\n  }\n  // utworzenie funkcji\n\n  // działanie na submit\n  e.preventDefault();\n  clearTimeout(timerId);\n\n  for (let i = 0; i < numPromise; i++) {\n    let position = i;\n    \n      createPromise(position, numDelay)\n        .then(({ position, numDelay }) => {\n          \n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${numDelay}ms`\n          );\n        })\n        .catch(({ position, numDelay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${numDelay}ms`\n          );\n        });\n      numDelay += numStep;\n  };\n\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$timerId","addEventListener","e","numDelay1","Number","value","numPromise","numStep","createPromise","position","numDelay","Promise","resolve","reject","setTimeout","Math","random","preventDefault","clearTimeout","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.b00eb2b6.js.map"}